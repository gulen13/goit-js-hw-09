{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,OAAQJ,SAASC,cAAc,yBAE7BI,EAAW,GAmCf,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAS,SAACC,EAASC,GAC5B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAACH,WAAUC,UAEnBG,EAAO,CAACJ,WAAUC,S,GAEnBA,E,IA1CPV,EAAKC,KAAKiB,iBAAiB,SAG3B,SAA0BC,GAC1BZ,EAASY,EAAMC,OAAOC,MAAQC,OAAOH,EAAMC,OAAOG,M,IAHlDvB,EAAKC,KAAKiB,iBAAiB,UAM3B,SAAsBC,GACpBA,EAAMK,iBACN,IAA6DC,EAAnBN,EAAMO,cAA3CC,SAAYC,EAAKH,EAALf,MAAOmB,EAAIJ,EAAJI,KAAMvB,EAAMmB,EAANnB,OAE9B,GAAGsB,EAAML,OAAS,GAAKM,EAAKN,OAAS,GAAKjB,EAAOiB,OAAS,EAExB,YADhCzB,EAAAgC,OAAOC,QAAQ,4CAA6E,CAACC,oBAAoB,IAInHJ,EAAQrB,EAASG,MAEjB,IAAK,IAAIuB,EAAI,EAAGA,GAAK3B,EAAOiB,MAAOU,GAAK,EAEtCzB,EAAcyB,EAAGL,GAChBM,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACjBZ,EAAAgC,OAAOM,QAAQ,uBAAwCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAE9D4B,OAAM,SAAAH,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MAClBZ,EAAAgC,OAAOC,QAAQ,sBAAqCM,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAE5DkB,GAASrB,EAASsB,KAEpB7B,EAAKC,KAAKsC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  firstDelay: document.querySelector('input[name=\"delay\"]'),\n  delayStep: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n};\nlet formData = {};\n\nrefs.form.addEventListener('input', handleFormInputs);\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction handleFormInputs(event) {\nformData[event.target.name] = Number(event.target.value);\n}\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  let {elements: { delay, step, amount }} = event.currentTarget;\n\n  if(delay.value <= 0 || step.value <= 0 || amount.value <= 0) {\n    Notify.failure('Заборонено вносити відємні числа або \"0\" ', {showOnlyTheLastOne: true,});\n    return\n  }\n\n  delay = formData.delay;\n\n  for (let i = 1; i <= amount.value; i += 1) {\n\n    createPromise(i, delay)\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n    delay += formData.step;\n  }\n  refs.form.reset();\n}\n\n\nfunction createPromise(position, delay) {\n  return new Promise ((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({position, delay});\n      };\n    }, delay);\n});\n};"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","firstDelay","delayStep","amount","$ce04d3a99e08e73b$var$formData","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","target","name","Number","value","preventDefault","_elements","currentTarget","elements","delay1","step","Notify","failure","showOnlyTheLastOne","i","then","param","success","concat","catch","reset"],"version":3,"file":"03-promises.c111eb86.js.map"}